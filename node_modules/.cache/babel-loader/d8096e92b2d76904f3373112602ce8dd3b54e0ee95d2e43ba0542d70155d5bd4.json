{"ast":null,"code":"import axios from'axios';const API_BASE='https://api.timetocode.ru/api';export const getEvents=async()=>{const response=await axios.get(\"\".concat(API_BASE,\"/vote-events\"));return response.data;};export const getMembers=async eventId=>{const response=await axios.get(\"\".concat(API_BASE,\"/members/\").concat(eventId));return response.data;};export const voteForMember=async voteData=>{try{const response=await axios.post(\"\".concat(API_BASE,\"/vote-for-member\"),voteData);return response.data;}catch(error){console.error('Ошибка при отправке голосов:',error);throw error;}};export const getReactionCounts=async memberId=>{try{const response=await axios.get(\"\".concat(API_BASE,\"/reaction-counts?member_id=\").concat(memberId));return response.data;}catch(error){console.error('Ошибка при получении результатов голосования:',error);throw error;}};","map":{"version":3,"names":["axios","API_BASE","getEvents","response","get","concat","data","getMembers","eventId","voteForMember","voteData","post","error","console","getReactionCounts","memberId"],"sources":["C:/Roma/repositories/konf_votes/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE = 'https://api.timetocode.ru/api';\r\n\r\nexport const getEvents = async () => {\r\n  const response = await axios.get(`${API_BASE}/vote-events`);\r\n  return response.data;\r\n};\r\n\r\nexport const getMembers = async (eventId) => {\r\n  const response = await axios.get(`${API_BASE}/members/${eventId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const voteForMember = async (voteData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE}/vote-for-member`, voteData);\r\n    return response.data; \r\n  } catch (error) {\r\n    console.error('Ошибка при отправке голосов:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getReactionCounts = async (memberId) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE}/reaction-counts?member_id=${memberId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении результатов голосования:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,QAAQ,CAAG,+BAA+B,CAEhD,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAACI,GAAG,IAAAC,MAAA,CAAIJ,QAAQ,gBAAc,CAAC,CAC3D,MAAO,CAAAE,QAAQ,CAACG,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC3C,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAACI,GAAG,IAAAC,MAAA,CAAIJ,QAAQ,cAAAI,MAAA,CAAYG,OAAO,CAAE,CAAC,CAClE,MAAO,CAAAL,QAAQ,CAACG,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAG,aAAa,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC/C,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAACW,IAAI,IAAAN,MAAA,CAAIJ,QAAQ,qBAAoBS,QAAQ,CAAC,CAC1E,MAAO,CAAAP,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,iBAAiB,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACnD,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAH,KAAK,CAACI,GAAG,IAAAC,MAAA,CAAIJ,QAAQ,gCAAAI,MAAA,CAA8BU,QAAQ,CAAE,CAAC,CACrF,MAAO,CAAAZ,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAEA,KAAK,CAAC,CACrE,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}