{"ast":null,"code":"// src/store/slices/votingSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { voteForMember } from '../../services/api'; // Импортируем функцию отправки голосов\n\n// Асинхронный action для отправки голосов\nexport const sendVotes = createAsyncThunk('voting/sendVotes', async (votes, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await voteForMember({\n      votes\n    });\n    return response; // Возвращаем ответ от сервера\n  } catch (error) {\n    return rejectWithValue(error.response.data); // Обработка ошибок\n  }\n});\nconst votingSlice = createSlice({\n  name: 'voting',\n  initialState: {\n    status: 'idle',\n    // Начальный статус\n    error: null // Статус ошибки\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(sendVotes.pending, state => {\n      state.status = 'loading'; // Когда отправляем запрос, ставим статус loading\n    }).addCase(sendVotes.fulfilled, state => {\n      state.status = 'succeeded'; // Когда запрос успешен\n    }).addCase(sendVotes.rejected, (state, action) => {\n      state.status = 'failed'; // Когда запрос не удался\n      state.error = action.payload; // Сохраняем ошибку\n    });\n  }\n});\nexport default votingSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","voteForMember","sendVotes","votes","rejectWithValue","response","error","data","votingSlice","name","initialState","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","payload","reducer"],"sources":["C:/Roma/repositories/konf_votes/src/store/slices/votingSlice.js"],"sourcesContent":["// src/store/slices/votingSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { voteForMember } from '../../services/api';  // Импортируем функцию отправки голосов\r\n\r\n// Асинхронный action для отправки голосов\r\nexport const sendVotes = createAsyncThunk(\r\n  'voting/sendVotes',\r\n  async (votes, { rejectWithValue }) => {\r\n    try {\r\n      const response = await voteForMember({ votes });\r\n      return response; // Возвращаем ответ от сервера\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data); // Обработка ошибок\r\n    }\r\n  }\r\n);\r\n\r\nconst votingSlice = createSlice({\r\n  name: 'voting',\r\n  initialState: {\r\n    status: 'idle', // Начальный статус\r\n    error: null,    // Статус ошибки\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(sendVotes.pending, (state) => {\r\n        state.status = 'loading';  // Когда отправляем запрос, ставим статус loading\r\n      })\r\n      .addCase(sendVotes.fulfilled, (state) => {\r\n        state.status = 'succeeded';  // Когда запрос успешен\r\n      })\r\n      .addCase(sendVotes.rejected, (state, action) => {\r\n        state.status = 'failed';    // Когда запрос не удался\r\n        state.error = action.payload; // Сохраняем ошибку\r\n      });\r\n  },\r\n});\r\n\r\nexport default votingSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,aAAa,QAAQ,oBAAoB,CAAC,CAAE;;AAErD;AACA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACvC,kBAAkB,EAClB,OAAOG,KAAK,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAAC;MAAEE;IAAM,CAAC,CAAC;IAC/C,OAAOE,QAAQ,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,eAAe,CAACE,KAAK,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;EAC/C;AACF,CACF,CAAC;AAED,MAAMC,WAAW,GAAGT,WAAW,CAAC;EAC9BU,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAE,MAAM;IAAE;IAChBL,KAAK,EAAE,IAAI,CAAK;EAClB,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,SAAS,CAACc,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACN,MAAM,GAAG,SAAS,CAAC,CAAE;IAC7B,CAAC,CAAC,CACDI,OAAO,CAACb,SAAS,CAACgB,SAAS,EAAGD,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAG,WAAW,CAAC,CAAE;IAC/B,CAAC,CAAC,CACDI,OAAO,CAACb,SAAS,CAACiB,QAAQ,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC9CH,KAAK,CAACN,MAAM,GAAG,QAAQ,CAAC,CAAI;MAC5BM,KAAK,CAACX,KAAK,GAAGc,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,WAAW,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}