{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { voteForMember } from '../../services/api';\nexport const sendVote = createAsyncThunk('voting/sendVote', async (voteData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await voteForMember(voteData);\n    return response;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nconst votingSlice = createSlice({\n  name: 'voting',\n  initialState: {\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(sendVote.pending, state => {\n      state.status = 'loading';\n    }).addCase(sendVote.fulfilled, state => {\n      state.status = 'succeeded';\n    }).addCase(sendVote.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\n// \n\nexport default votingSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","voteForMember","sendVote","voteData","rejectWithValue","response","error","data","votingSlice","name","initialState","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","payload","reducer"],"sources":["C:/Roma/repositories/konf_votes/src/store/slices/votingSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { voteForMember } from '../../services/api';\r\n\r\n\r\nexport const sendVote = createAsyncThunk(\r\n  'voting/sendVote',\r\n  async (voteData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await voteForMember(voteData);\r\n      return response; \r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data); \r\n    }\r\n  }\r\n);\r\n\r\nconst votingSlice = createSlice({\r\n  name: 'voting',\r\n  initialState: {\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(sendVote.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(sendVote.fulfilled, (state) => {\r\n        state.status = 'succeeded';\r\n      })\r\n      .addCase(sendVote.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n// \r\n\r\nexport default votingSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,aAAa,QAAQ,oBAAoB;AAGlD,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CACtC,iBAAiB,EACjB,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACE,QAAQ,CAAC;IAC9C,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,eAAe,CAACE,KAAK,CAACD,QAAQ,CAACE,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AAED,MAAMC,WAAW,GAAGT,WAAW,CAAC;EAC9BU,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAE,MAAM;IACdL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,QAAQ,CAACc,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDI,OAAO,CAACb,QAAQ,CAACgB,SAAS,EAAGD,KAAK,IAAK;MACtCA,KAAK,CAACN,MAAM,GAAG,WAAW;IAC5B,CAAC,CAAC,CACDI,OAAO,CAACb,QAAQ,CAACiB,QAAQ,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC7CH,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACX,KAAK,GAAGc,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF;;AAEA,eAAeb,WAAW,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}