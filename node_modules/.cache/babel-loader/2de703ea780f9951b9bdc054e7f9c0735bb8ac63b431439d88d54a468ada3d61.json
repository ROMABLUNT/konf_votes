{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_BASE = 'https://api.timetocode.ru/api';\n\n// Асинхронный action для получения списка событий\nexport const fetchEvents = createAsyncThunk('events/fetchEvents', async () => {\n  const response = await axios.get(`${API_BASE}/vote-events`);\n  return response.data;\n});\n\n// Создаём slice для управления состоянием событий\nconst eventsSlice = createSlice({\n  name: 'events',\n  initialState: {\n    events: [],\n    status: 'idle',\n    // idle | loading | succeeded | failed\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchEvents.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchEvents.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.events = action.payload;\n    }).addCase(fetchEvents.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport default eventsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE","fetchEvents","response","get","data","eventsSlice","name","initialState","events","status","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Roma/repositories/konf_votes/src/store/slices/eventsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = 'https://api.timetocode.ru/api';\r\n\r\n// Асинхронный action для получения списка событий\r\nexport const fetchEvents = createAsyncThunk('events/fetchEvents', async () => {\r\n  const response = await axios.get(`${API_BASE}/vote-events`);\r\n  return response.data;\r\n});\r\n\r\n// Создаём slice для управления состоянием событий\r\nconst eventsSlice = createSlice({\r\n  name: 'events',\r\n  initialState: {\r\n    events: [],\r\n    status: 'idle', // idle | loading | succeeded | failed\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchEvents.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchEvents.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.events = action.payload;\r\n      })\r\n      .addCase(fetchEvents.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default eventsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,+BAA+B;;AAEhD;AACA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC5E,MAAMI,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,cAAc,CAAC;EAC3D,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAGR,WAAW,CAAC;EAC9BS,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,MAAM;IAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,WAAW,CAACc,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACb,WAAW,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,MAAM,GAAGU,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACb,WAAW,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,WAAW,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}