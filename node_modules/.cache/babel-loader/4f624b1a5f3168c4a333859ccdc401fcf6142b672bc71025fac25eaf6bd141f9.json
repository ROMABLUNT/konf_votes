{"ast":null,"code":"var _jsxFileName = \"C:\\\\Roma\\\\repositories\\\\konf_votes\\\\src\\\\pages\\\\Conference\\\\ConferencePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchMembers } from '../../store/slices/membersSlice';\nimport MemberCard from '../../components/MemberCard/MemberCard';\nimport { sendVote } from '../../store/slices/votingSlice'; // Изменим на sendVote для одного голоса\nimport './ConferencePage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConferencePage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Извлекаем id из URL\n  const dispatch = useDispatch();\n  const {\n    members,\n    status,\n    error\n  } = useSelector(state => state.members);\n  const [reactions, setReactions] = useState({});\n  useEffect(() => {\n    dispatch(fetchMembers(id)); // Загружаем участников конференции\n  }, [id, dispatch]);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Функция для обработки выбора реакции\n  const handleReactionSelect = (memberId, reaction) => {\n    setReactions(prevReactions => ({\n      ...prevReactions,\n      [memberId]: reaction // Обновляем реакцию для участника\n    }));\n\n    // Отправляем запрос на сервер сразу после выбора реакции\n    const voteData = {\n      event_id: parseInt(id),\n      // id события (например, конференции)\n      member_id: parseInt(memberId),\n      // id участника\n      reaction_id: reaction // id реакции\n    };\n    console.log('Vote data:', voteData); // Выводим данные для отладки\n\n    // Отправляем данные на сервер через Redux\n    dispatch(sendVote(voteData)); // Здесь передаем сформированный объект голоса\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conference-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438 \\u043A\\u043E\\u043D\\u0444\\u0435\\u0440\\u0435\\u043D\\u0446\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: members.map(member => /*#__PURE__*/_jsxDEV(MemberCard, {\n        member: member,\n        onReactionSelect: handleReactionSelect // Передаем обработчик для обновления реакций\n      }, member.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ConferencePage, \"gxYu4QWZJ0ZSUAEzP7AvRYb8hlI=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = ConferencePage;\nexport default ConferencePage;\nvar _c;\n$RefreshReg$(_c, \"ConferencePage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","useParams","fetchMembers","MemberCard","sendVote","jsxDEV","_jsxDEV","ConferencePage","_s","id","dispatch","members","status","error","state","reactions","setReactions","children","fileName","_jsxFileName","lineNumber","columnNumber","handleReactionSelect","memberId","reaction","prevReactions","voteData","event_id","parseInt","member_id","reaction_id","console","log","className","map","member","onReactionSelect","_c","$RefreshReg$"],"sources":["C:/Roma/repositories/konf_votes/src/pages/Conference/ConferencePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMembers } from '../../store/slices/membersSlice';\r\nimport MemberCard from '../../components/MemberCard/MemberCard';\r\nimport { sendVote } from '../../store/slices/votingSlice'; // Изменим на sendVote для одного голоса\r\nimport './ConferencePage.scss';\r\n\r\nconst ConferencePage = () => {\r\n  const { id } = useParams(); // Извлекаем id из URL\r\n  const dispatch = useDispatch();\r\n  const { members, status, error } = useSelector((state) => state.members);\r\n\r\n  const [reactions, setReactions] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMembers(id)); // Загружаем участников конференции\r\n  }, [id, dispatch]);\r\n\r\n  if (status === 'loading') {\r\n    return <div>Загрузка участников...</div>;\r\n  }\r\n\r\n  if (status === 'failed') {\r\n    return <div>Ошибка: {error}</div>;\r\n  }\r\n\r\n  // Функция для обработки выбора реакции\r\n  const handleReactionSelect = (memberId, reaction) => {\r\n    setReactions((prevReactions) => ({\r\n      ...prevReactions,\r\n      [memberId]: reaction, // Обновляем реакцию для участника\r\n    }));\r\n\r\n    // Отправляем запрос на сервер сразу после выбора реакции\r\n    const voteData = {\r\n      event_id: parseInt(id), // id события (например, конференции)\r\n      member_id: parseInt(memberId), // id участника\r\n      reaction_id: reaction, // id реакции\r\n    };\r\n\r\n    console.log('Vote data:', voteData);  // Выводим данные для отладки\r\n\r\n    // Отправляем данные на сервер через Redux\r\n    dispatch(sendVote(voteData)); // Здесь передаем сформированный объект голоса\r\n  };\r\n\r\n  return (\r\n    <div className=\"conference-container\">\r\n      <h1>Участники конференции</h1>\r\n      <div>\r\n        {members.map((member) => (\r\n          <MemberCard\r\n            key={member.id}\r\n            member={member}\r\n            onReactionSelect={handleReactionSelect} // Передаем обработчик для обновления реакций\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConferencePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}